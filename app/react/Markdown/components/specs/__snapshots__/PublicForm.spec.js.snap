// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PublicForm should enable remote captcha 1`] = `
<LocalForm
  getDispatch={[Function]}
  initialState={Object {}}
  model="publicform"
  onSubmit={[Function]}
  validators={
    Object {
      "captcha": Object {
        "required": [Function],
      },
      "title": Object {
        "required": [Function],
      },
    }
  }
>
  <div
    className="public-form"
  >
    <Connect(FormGroup)
      key="title"
      model=".title"
    >
      <ul
        className="search__filter"
      >
        <li>
          <label
            htmlFor="title"
          >
            <Connect(Translate)
              context="123"
            >
              Title changed
            </Connect(Translate)>
            <span
              className="required"
            >
              *
            </span>
          </label>
        </li>
        <li
          className="wide"
        >
          <DefaultConnectedControlText
            className="form-control"
            id="title"
            model=".title"
          />
        </li>
      </ul>
    </Connect(FormGroup)>
    <Connect(MetadataFormFields)
      boundChange={[Function]}
      model="publicform"
      template={
        Immutable.Map {
          "_id": "123",
          "commonProperties": Immutable.List [
            Immutable.Map {
              "label": "Title changed",
              "name": "title",
              "generatedId": false,
            },
          ],
          "properties": Immutable.List [
            Immutable.Map {
              "type": "text",
              "name": "text",
            },
            Immutable.Map {
              "type": "image",
              "name": "image",
            },
          ],
        }
      }
      thesauris={Immutable.List []}
    />
    <Connect(FormGroup)
      key="captcha"
      model=".captcha"
    >
      <ul
        className="search__filter"
      >
        <li>
          <label>
            <Connect(Translate)>
              Captcha
            </Connect(Translate)>
            <span
              className="required"
            >
              *
            </span>
          </label>
        </li>
        <li
          className="wide"
        >
          <Captcha
            model=".captcha"
            refresh={[Function]}
            remote={true}
          />
        </li>
      </ul>
    </Connect(FormGroup)>
    <button
      className="btn btn-success"
      type="submit"
    >
      <Connect(Translate)>
        Submit
      </Connect(Translate)>
    </button>
  </div>
</LocalForm>
`;

exports[`PublicForm should render a form 1`] = `
<LocalForm
  getDispatch={[Function]}
  initialState={Object {}}
  model="publicform"
  onSubmit={[Function]}
  validators={
    Object {
      "captcha": Object {
        "required": [Function],
      },
      "title": Object {
        "required": [Function],
      },
    }
  }
>
  <div
    className="public-form"
  >
    <Connect(FormGroup)
      key="title"
      model=".title"
    >
      <ul
        className="search__filter"
      >
        <li>
          <label
            htmlFor="title"
          >
            <Connect(Translate)
              context="123"
            >
              Title changed
            </Connect(Translate)>
            <span
              className="required"
            >
              *
            </span>
          </label>
        </li>
        <li
          className="wide"
        >
          <DefaultConnectedControlText
            className="form-control"
            id="title"
            model=".title"
          />
        </li>
      </ul>
    </Connect(FormGroup)>
    <Connect(MetadataFormFields)
      boundChange={[Function]}
      model="publicform"
      template={
        Immutable.Map {
          "_id": "123",
          "commonProperties": Immutable.List [
            Immutable.Map {
              "label": "Title changed",
              "name": "title",
              "generatedId": false,
            },
          ],
          "properties": Immutable.List [
            Immutable.Map {
              "type": "text",
              "name": "text",
            },
            Immutable.Map {
              "type": "image",
              "name": "image",
            },
          ],
        }
      }
      thesauris={Immutable.List []}
    />
    <Connect(FormGroup)
      key="captcha"
      model=".captcha"
    >
      <ul
        className="search__filter"
      >
        <li>
          <label>
            <Connect(Translate)>
              Captcha
            </Connect(Translate)>
            <span
              className="required"
            >
              *
            </span>
          </label>
        </li>
        <li
          className="wide"
        >
          <Captcha
            model=".captcha"
            refresh={[Function]}
            remote={false}
          />
        </li>
      </ul>
    </Connect(FormGroup)>
    <button
      className="btn btn-success"
      type="submit"
    >
      <Connect(Translate)>
        Submit
      </Connect(Translate)>
    </button>
  </div>
</LocalForm>
`;

exports[`PublicForm should render a form with file and attachments 1`] = `
<LocalForm
  getDispatch={[Function]}
  initialState={Object {}}
  model="publicform"
  onSubmit={[Function]}
  validators={
    Object {
      "captcha": Object {
        "required": [Function],
      },
      "title": Object {
        "required": [Function],
      },
    }
  }
>
  <div
    className="public-form"
  >
    <Connect(FormGroup)
      key="title"
      model=".title"
    >
      <ul
        className="search__filter"
      >
        <li>
          <label
            htmlFor="title"
          >
            <Connect(Translate)
              context="123"
            >
              Title changed
            </Connect(Translate)>
            <span
              className="required"
            >
              *
            </span>
          </label>
        </li>
        <li
          className="wide"
        >
          <DefaultConnectedControlText
            className="form-control"
            id="title"
            model=".title"
          />
        </li>
      </ul>
    </Connect(FormGroup)>
    <Connect(MetadataFormFields)
      boundChange={[Function]}
      model="publicform"
      template={
        Immutable.Map {
          "_id": "123",
          "commonProperties": Immutable.List [
            Immutable.Map {
              "label": "Title changed",
              "name": "title",
              "generatedId": false,
            },
          ],
          "properties": Immutable.List [
            Immutable.Map {
              "type": "text",
              "name": "text",
            },
            Immutable.Map {
              "type": "image",
              "name": "image",
            },
          ],
        }
      }
      thesauris={Immutable.List []}
    />
    <div
      className="form-group"
    >
      <ul
        className="search__filter"
      >
        <li
          className="attachments-list"
        >
          <Connect(Translate)>
            Document
          </Connect(Translate)>
          <BrowserView>
            <t
              accept=".pdf"
              className="dropzone"
              disableClick={false}
              disablePreview={false}
              disabled={false}
              maxSize={Infinity}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
            >
              <label>
                <div
                  className="text-content"
                >
                  <div
                    id="icon"
                  >
                    <Connect(Icon)
                      icon="cloud-upload-alt"
                    />
                  </div>
                  <div
                    id="upload-text"
                  >
                    <Connect(Translate)>
                      Drop your files here to upload or
                    </Connect(Translate)>
                  </div>
                  <div
                    id="upload-button"
                  >
                    <div
                      id="button"
                    >
                      <Connect(Translate)>
                        Select files on your device
                      </Connect(Translate)>
                    </div>
                  </div>
                </div>
              </label>
            </t>
          </BrowserView>
          <MobileView>
            <DefaultConnectedControlFile
              accept=".pdf"
              className="form-control on-mobile"
              id="file"
              model=".file"
              onChange={[Function]}
            />
          </MobileView>
          <div
            className="preview-list"
          >
            <ul />
          </div>
        </li>
      </ul>
    </div>
    <div
      className="form-group"
    >
      <ul
        className="search__filter"
      >
        <li
          className="attachments-list"
        >
          <Connect(Translate)>
            Attachments
          </Connect(Translate)>
          <BrowserView>
            <t
              className="dropzone"
              disableClick={false}
              disablePreview={false}
              disabled={false}
              maxSize={Infinity}
              minSize={0}
              multiple={true}
              onDrop={[Function]}
              preventDropOnDocument={true}
            >
              <label>
                <div
                  className="text-content"
                >
                  <div
                    id="icon"
                  >
                    <Connect(Icon)
                      icon="cloud-upload-alt"
                    />
                  </div>
                  <div
                    id="upload-text"
                  >
                    <Connect(Translate)>
                      Drop your files here to upload or
                    </Connect(Translate)>
                  </div>
                  <div
                    id="upload-button"
                  >
                    <div
                      id="button"
                    >
                      <Connect(Translate)>
                        Select files on your device
                      </Connect(Translate)>
                    </div>
                  </div>
                </div>
              </label>
            </t>
          </BrowserView>
          <MobileView>
            <DefaultConnectedControlFile
              className="form-control on-mobile"
              id="attachments"
              model=".attachments"
              multiple="multiple"
              onChange={[Function]}
            />
          </MobileView>
          <div
            className="preview-list"
          >
            <ul />
          </div>
        </li>
      </ul>
    </div>
    <Connect(FormGroup)
      key="captcha"
      model=".captcha"
    >
      <ul
        className="search__filter"
      >
        <li>
          <label>
            <Connect(Translate)>
              Captcha
            </Connect(Translate)>
            <span
              className="required"
            >
              *
            </span>
          </label>
        </li>
        <li
          className="wide"
        >
          <Captcha
            model=".captcha"
            refresh={[Function]}
            remote={false}
          />
        </li>
      </ul>
    </Connect(FormGroup)>
    <button
      className="btn btn-success"
      type="submit"
    >
      <Connect(Translate)>
        Submit
      </Connect(Translate)>
    </button>
  </div>
</LocalForm>
`;
